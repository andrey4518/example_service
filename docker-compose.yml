version: '3'
x-example-service-common:
  &example-service-common
  environment:
    &example-service-common-env
    POSTGRES_USER: example
    POSTGRES_PASSWORD: example
    POSTGRES_DB: example
    KAFKA_URL: kafka:9092
    OBJECT_CREATION_TOPIC_NAME: object_creation_topic
    MOVIE_CREATION_TOPIC_NAME: movie_creation_topic
    API_URL: http://api:8080/api/v1
    TMDB_API_V3_KEY: ${TMDB_API_V3_KEY}

services:
  postgres:
    image: postgres:13
    ports:
      - 15432:5432
    environment:
      <<: *example-service-common-env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "example"]
      interval: 5s
      retries: 5
    restart: always

  api:
    build: service_api/.
    environment:
      <<: *example-service-common-env
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
    ports:
      - 8081:8080
    depends_on:
      - postgres
      - kafka

  activity_generator_service:
    build: activity_generator_service/.
    ports:
      - 8082:8000
    restart: always
    depends_on:
      - api

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  detailed_info_scraper_service:
    build: detailed_info_scraper_service/.
    restart: always
    environment:
      <<: *example-service-common-env
      PYTHONUNBUFFERED: 1
    depends_on:
      - api
      - kafka

  nifi:
    image: apache/nifi:1.17.0
    ports:
      - 8443:8443
      - 8083:8080
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: nifi
      SINGLE_USER_CREDENTIALS_PASSWORD: nifi123456789
      NIFI_WEB_HTTP_HOST: '0.0.0.0'
      NIFI_WEB_HTTP_PORT: '8080'
      NIFI_WEB_HTTPS_HOST: 
      NIFI_WEB_HTTPS_PORT: 
    depends_on:
      - kafka
      - postgres

  nifi-registry:
    image: apache/nifi-registry:1.17.0
    ports:
      - 18080:18080
    volumes:
      - ${NIFI_REGISTRY_PROVIDERS_CONF:-./nifi_registry/providers.xml}:/opt/nifi-registry/nifi-registry-current/conf/providers.xml

  nifi-init:
    build: nifi_init/.
    environment:
      <<: *example-service-common-env
      PYTHONUNBUFFERED: 1
    depends_on:
      - nifi
      - nifi-registry

volumes:
  postgres-db-volume:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  nifi-registry-database:
  nifi-registry-flow-storage:
  nifi-conf:
